const gol = require('../gol.js')

jest.unmock('../gol.js')

describe('gol', () => {
    describe('initialise', () => {
        it('initialises with provided seed universe', () => {
            const seedUniverse = [
                ['*', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUnpopulated8x8Universe = [
                ['*', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)

            expect(gol.getCurrentUniverse()).toEqual(expectedUnpopulated8x8Universe)
        })
        
        it('generations starts at zero', () => {
            gol.initialiseUniverseWithSeedUniverse()

            expect(gol.getGenerationNumber()).toEqual(0)
        })
    })

    describe('generate', () => {
        it('generate increments generation number', () => {
            gol.initialiseUniverseWithSeedUniverse()
            gol.generate()

            expect(gol.getGenerationNumber()).toEqual(1)

            gol.generate()

            expect(gol.getGenerationNumber()).toEqual(2)
        })

        it('live cell with no neighbours will die', () => {
            const seedUniverse = [
                ['*', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)
        })
        
        it('dead cell with three live neighbours becomes alive', () => {
            const seedUniverse = [
                ['-', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)

            const seedUniverse2 = [
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '*', '*', '*', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse2 = [
                ['-', '-', '*', '-', '-', '-', '-', '-',],
                ['-', '-', '*', '-', '-', '-', '-', '-',],
                ['-', '-', '*', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse2)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse2)
        })

        it('live cell with less than 2 live neighbours will die', () => {
            const seedUniverse = [
                ['*', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)
        })

        it('live cell with 2 live neighbours will live', () => {
            const seedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)
        })

        it('live cell with 3 live neighbours will live', () => {
            const seedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)
        })

        it('live cell with > 3 live neighbours will die', () => {
            const seedUniverse = [
                ['*', '*', '-', '-', '-', '-', '-', '-',],
                ['*', '*', '*', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            const expectedUniverse = [
                ['*', '-', '*', '-', '-', '-', '-', '-',],
                ['*', '-', '*', '-', '-', '-', '-', '-',],
                ['-', '*', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
                ['-', '-', '-', '-', '-', '-', '-', '-',],
            ]

            gol.initialiseUniverseWithSeedUniverse(seedUniverse)
            gol.generate()

            expect(gol.getCurrentUniverse()).toEqual(expectedUniverse)
        })
    })
})
